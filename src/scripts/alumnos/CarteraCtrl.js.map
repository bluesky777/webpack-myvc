{
  "version": 3,
  "file": "CarteraCtrl.js",
  "sourceRoot": "",
  "sources": [
    "CarteraCtrl.coffee"
  ],
  "names": [],
  "mappings": "AAAA;EAAA;EAEA,OAAO,CAAC,MAAR,CAAe,cAAf,CAEA,CAAC,UAFD,CAEY,aAFZ,EAE2B;IAAC,QAAD;IAAW,KAAX;IAAkB,QAAlB;IAA4B,WAA5B;IAAyC,SAAzC;IAAoD,aAApD;IAAmE,QAAnE;IAA6E,OAA7E;IAAsF,iBAAtF;IAAyG,QAAzG;IAAmH,UAAnH;IAA+H,SAA/H;IAA0I,cAA1I;IAA0J,QAAA,CAAC,MAAD;IAAS,GAAT;IAAc,MAAd;IAAsB,MAAtB;IAA8B,OAA9B;IAAuC,WAAvC;IAAoD,MAApD;IAA4D,KAA5D;IAAmE,eAAnE;IAAoF,MAApF;IAA4F,QAA5F;IAAsG,OAAtG;IAA+G,YAA/G,CAAA;AAEnL,UAAA,OAAA;IAAA,WAAA;IAAA,SAAA;IAAA;MAAA,WAAW,CAAC,gBAAZ,CAAA;MAEA,MAAM,CAAC,IAAP,GAA4B,CAAA;MAC5B,MAAM,CAAC,WAAP,GAA4B,CAAA;MAC5B,MAAM,CAAC,UAAP,GAAwB,GAAG,CAAC,MAAJ,GAAW;MACnC,MAAM,CAAC,KAAP,GAAwB,GAAG,CAAC;MAC5B,MAAM,CAAC,MAAP,GAAuB,GAAG,CAAC;MAC3B,MAAM,CAAC,SAAP,GAA4B,OAP5B;MAQA,MAAM,CAAC,cAAP,GAA4B;MAC5B,MAAM,CAAC,UAAP,GAA4B;MAC5B,MAAM,CAAC,YAAP,GAA4B;MAC5B,MAAM,CAAC,YAAP,GAA4B;MAG5B,MAAM,CAAC,IAAI,CAAC,KAAZ,GAAoB;MAEpB,KAAK,CAAC,GAAN,CAAU,UAAV,CAAqB,CAAC,IAAtB,CAA2B,QAAA,CAAC,CAAD,CAAA;AAEzB,YAAA,KAAA;IAAA,CAAA;IAAA,GAAA;IAAA,UAAA;IAAA;QAAA,UAAA,GAAa;QAEb,IAAG,YAAY,CAAC,UAAhB;UACE,UAAA,GAAa,QAAA,CAAS,YAAY,CAAC,UAAtB,EADf;;QAGA,MAAM,CAAC,MAAP,GAAgB,CAAC,CAAC;AAElB;QAAA,KAAA,qCAAA;;UACE,IAAG,KAAK,CAAC,EAAN,KAAY,UAAf;YACE,MAAM,CAAC,IAAI,CAAC,KAAZ,GAAoB,MADtB;;QADF;eAIA,MAAM,CAAC,YAAP,CAAoB,MAAM,CAAC,IAAI,CAAC,KAAhC;MAbyB,CAA3B;MAkBA,MAAM,CAAC,4BAAP,GAAsC,QAAA,CAAA,CAAA;eACpC,MAAM,CAAC,4BAAP,GAAsC,CAAC,MAAM,CAAC;MADV;MAItC,MAAM,CAAC,eAAP,GAAyB,QAAA,CAAC,IAAD;IAAO,QAAP,CAAA;QACvB,MAAM,CAAC,CAAP,GAAW;QACX,MAAM,CAAC,OAAP,GAAiB,QAAA,IAAY,QAAS,CAAA,CAAA;QACtC,IAAI,IAAJ;UACE,IAAI,CAAC,MAAL,GAAc,MAAM,CAAC,MAAP,CAAc;YACxB,GAAA,EAAK,GAAG,CAAC,MAAJ,GAAa,kBADM;YAExB,IAAA,EAAM;cAAC,IAAA,EAAM;YAAP;UAFkB,CAAd;iBAKd,IAAI,CAAC,MAAM,CAAC,IAAZ,CAAkB,QAAA,CAAC,QAAD,CAAA;mBACd,QAAA,CAAU,QAAA,CAAA,CAAA;cACN,IAAI,CAAC,MAAL,GAAc,QAAQ,CAAC;qBACvB,MAAM,CAAC,YAAP,CAAoB,MAAM,CAAC,IAAI,CAAC,KAAhC;YAFM,CAAV;UADc,CAAlB;IAKG,QAAA,CAAC,QAAD,CAAA;YACC,IAAI,QAAQ,CAAC,MAAT,GAAkB,CAAtB;qBACI,MAAM,CAAC,QAAP,GAAkB,QAAQ,CAAC,MAAT,GAAkB,IAAlB,GAAyB,QAAQ,CAAC,KADxD;;UADD,CALH;IAQE,QAAA,CAAC,GAAD,CAAA;mBACE,IAAI,CAAC,QAAL,GAAgB,IAAI,CAAC,GAAL,CAAS,GAAT;IAAc,QAAA,CAAS,KAAA,GAAQ,GAAG,CAAC,MAAZ,GAAqB,GAAG,CAAC,KAAlC,CAAd;UADlB,CARF,EANF;;MAHuB;MAuBzB,MAAM,CAAC,aAAP,GAAuB,QAAA,CAAC,KAAD;IAAQ,MAAR,CAAA;QACrB,IAAG,CAAI,KAAP;AACE,iBADF;;QAGA,YAAY,CAAC,OAAb,CAAqB,YAArB;IAAmC,KAAK,CAAC,EAAzC;eACA,MAAM,CAAC,YAAP,CAAoB,KAApB;MALqB;MAQvB,MAAM,CAAC,QAAP,GAAkB,QAAA,CAAA,CAAA;eAChB,MAAM,CAAC,KAAP,CAAA;MADgB;MAMlB,MAAM,CAAC,MAAP,GAAgB,QAAA,CAAC,GAAD,CAAA,EAAA;;eAEd,MAAM,CAAC,EAAP,CAAU,eAAV;IAA2B;UAAE,UAAA,EAAY,GAAG,CAAC,SAAlB;UAA6B,IAAA,EAAM;QAAnC,CAA3B;MAFc;MAKhB,OAAA,GAAU;MACV,WAAA,GAAc;MACd,SAAA,GAAY;MACZ,iBAAA,GAAoB;MAIpB,MAAM,CAAC,WAAP,GACE;QAAA,cAAA,EAAgB,IAAhB;QACA,gBAAA,EAAkB,IADlB;QAEA,kBAAA,EAAoB,iBAFpB;QAGA,aAAA,EAAe,IAHf;QAIA,eAAA,EAAiB,IAJjB;QAKA,uBAAA,EAAyB,CAAE,SAAF;IAAa,aAAb,CALzB;QAMA,0BAAA,EAA4B,GAN5B;QAOA,eAAA,EAAiB,KAPjB;QAQA,iBAAA,EAAmB,KARnB;QASA,mBAAA,EAAqB,4BATrB;QAUA,cAAA,EAAgB,IAVhB;QAWA,oBAAA,EAAsB,KAXtB;QAYA,cAAA,EAAgB,IAZhB;QAaA,qBAAA,EAAuB,IAbvB;QAcA,UAAA,EAAY;UACV;YAAE,IAAA,EAAM,IAAR;YAAc,WAAA,EAAY,IAA1B;YAAgC,KAAA,EAAO,EAAvC;YAA2C,cAAA,EAAgB,KAA3D;YAAkE,gBAAA,EAAkB,KAApF;YAA2F,YAAA,EAAc;UAAzG,CADU;UAEV;YAAE,IAAA,EAAM,SAAR;YAAmB,WAAA,EAAY,SAA/B;YAA0C,KAAA,EAAO,EAAjD;YAAqD,aAAA,EAAe,KAApE;YAA2E,eAAA,EAAiB,KAA5F;YAAmG,YAAA,EAAc,OAAjH;YAA0H,cAAA,EAAgB,KAA1I;YAAiJ,gBAAA,EAAkB;UAAnK,CAFU;UAGV;YAAE,KAAA,EAAO,aAAT;YAAwB,WAAA,EAAY,MAApC;YAA4C,YAAA,EAAc,4FAA1D;YAAwJ,KAAA,EAAO;UAA/J,CAHU;UAIV;YAAE,KAAA,EAAO,SAAT;YAAoB,QAAA,EAAU,EAA9B;YACA,MAAA,EAAQ;cACN,SAAA,EAAW,OAAO,CAAC;YADb,CADR;YAIA,YAAA,EAAc;UAJd,CAJU;UASV;YAAE,KAAA,EAAO,WAAT;YAAsB,QAAA,EAAU,EAAhC;YAAoC,MAAA,EAAQ;cAAE,SAAA,EAAW,OAAO,CAAC;YAArB;UAA5C,CATU;UAUV;YAAE,KAAA,EAAO,MAAT;YAAiB,KAAA,EAAO;UAAxB,CAVU;UAWV;YAAE,KAAA,EAAO,cAAT;YAAyB,WAAA,EAAY;UAArC,CAXU;UAYV;YAAE,KAAA,EAAO,UAAT;YAAqB,MAAA,EAAQ;cAAE,SAAA,EAAW,OAAO,CAAC;YAArB,CAA7B;YAAkE,WAAA,EAAa,SAA/E;YAA0F,YAAA,EAAc,SAAxG;YAAmH,QAAA,EAAU;UAA7H,CAZU;UAcV,CAAA;;YAAE,KAAA,EAAO,OAAT;YAAkB,WAAA,EAAa,OAA/B;YAAwC,YAAA,EAAc,WAAtD;YAAmE,QAAA,EAAU,GAA7E;YAAkF,eAAA,EAAiB,eAAe,CAAC,gBAAgB,CAAC,GAApI;YAAyI,kBAAA,EAAoB;UAA7J,CAdU;UAeV;YAAE,KAAA,EAAO,eAAT;YAA0B,WAAA,EAAa,aAAvC;YAAsD,QAAA,EAAU,GAAhE;YAAqE,UAAA,EAAY,iBAAjF;YAAoG,IAAA,EAAM;UAA1G,CAfU;SAdZ;QA+BA,WAAA,EAAa,IA/Bb;QAgCA,aAAA,EAAe,QAAA,CAAE,OAAF,CAAA;UACb,MAAM,CAAC,OAAP,GAAiB;iBAEjB,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,aAAhB,CAA8B,MAA9B;IAAsC,QAAA,CAAC,SAAD;IAAY,MAAZ;IAAoB,QAApB;IAA8B,QAA9B,CAAA;AAEpC,gBAAA;YAAA,IAAG,QAAA,KAAY,QAAf;cACE,KAAA,GAAQ,CAAA;cAER,IAAG,MAAM,CAAC,KAAP,KAAgB,UAAnB;gBACE,KAAK,CAAC,OAAN,GAAgB,SAAS,CAAC,QAD5B;;cAGA,IAAG,CAAI,SAAS,CAAC,SAAjB;gBACE,SAAS,CAAC,SAAV,GAAsB,IAAI,CAAC,GAD7B;;cAGA,KAAK,CAAC,SAAN,GAAkB,SAAS,CAAC;cAC5B,KAAK,CAAC,SAAN,GAAkB,MAAM,CAAC;cACzB,KAAK,CAAC,KAAN,GAAgB;cAEhB,KAAK,CAAC,GAAN,CAAU,yBAAV;IAAqC,KAArC,CAA4C,CAAC,IAA7C,CAAkD,QAAA,CAAC,CAAD,CAAA;uBAChD,MAAM,CAAC,OAAP,CAAe,iCAAf;cADgD,CAAlD;IAEE,QAAA,CAAC,EAAD,CAAA;gBACA,SAAU,CAAA,MAAM,CAAC,KAAP,CAAV,GAA0B;uBAC1B,MAAM,CAAC,KAAP,CAAa,oBAAb;IAAmC,OAAnC;cAFA,CAFF,EAbF;;mBAmBA,MAAM,CAAC,MAAP,CAAA;UArBoC,CAAtC;QAHa;MAhCf;MA6DF,MAAM,CAAC,eAAP,GAAyB,QAAA,CAAA,CAAA;eACvB,MAAM,CAAC,cAAP,GAAwB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,eAAzB,CAAA;MADD;MAKzB,MAAM,CAAC,YAAP,GAAsB,QAAA,CAAC,IAAD,CAAA;eAEpB,KAAK,CAAC,GAAN,CAAU,mBAAV;IAA+B;UAAC,YAAA,EAAc;QAAf,CAA/B,CAAoD,CAAC,IAArD,CAA0D,QAAA,CAAC,CAAD,CAAA;UACxD,MAAM,CAAC,WAAW,CAAC,IAAnB,GAA0B,CAAC,CAAC;UAE5B,MAAM,CAAC,WAAW,CAAC,UAAW,CAAA,CAAA,CAAE,CAAC,OAAjC,GAA2C;iBAC3C,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAApB,CAAA;QAJwD,CAA1D;MAFoB;MAStB,MAAM,CAAC,WAAP,GAAqB,QAAA,CAAA,CAAA;AACnB,YAAA,MAAA;IAAA,CAAA;IAAA,GAAA;IAAA,GAAA;IAAA;QAAA,GAAA,GAAM;QACN,IAAG,MAAM,CAAC,WAAW,CAAC,IAAtB;AACE;UAAA,KAAA,qCAAA;;YACE,GAAA,GAAM,GAAA,GAAM,MAAM,CAAC;UADrB,CADF;;AAGA,eAAO,OAAA,CAAQ,UAAR,CAAA,CAAoB,GAApB;IAAyB,GAAzB;IAA8B,CAA9B;MALY;MAQrB,MAAM,CAAC,gBAAP,GAA0B,QAAA,CAAA,CAAA;AACxB,YAAA,MAAA;IAAA,OAAA;IAAA,CAAA;IAAA,GAAA;IAAA,OAAA;IAAA,GAAA;IAAA;QAAA,GAAA,GAAM;QACN,OAAA,GAAU;QACV,OAAA,GAAU;QAEV,IAAG,MAAM,CAAC,WAAW,CAAC,IAAtB;AACE;UAAA,KAAA,qCAAA;;YACE,IAAG,CAAC,MAAM,CAAC,SAAX;cACE,GAAA,GAAM,GAAA,GAAM,EADd;;YAEA,IAAG,MAAM,CAAC,IAAP,KAAe,GAAlB;cACE,OAAA,GADF;aAAA,MAAA;cAGE,OAAA,GAHF;;UAHF,CADF;;QAQA,MAAM,CAAC,YAAP,GAAsB;QACtB,MAAM,CAAC,YAAP,GAAsB;AAEtB,eAAO;MAhBiB;MAkB1B,MAAM,CAAC,kBAAP,GAA4B,QAAA,CAAC,KAAD;IAAQ,KAAR,CAAA;AAE1B,YAAA;QAAA,KAAA,GACE;UAAA,OAAA,EAAY,MAAM,CAAC,eAAP,CAAA,CAAZ;UACA,SAAA,EAAY,KADZ;UAEA,KAAA,EAAW;QAFX;eAIF,KAAK,CAAC,GAAN,CAAU,gCAAV;IAA4C,KAA5C,CAAkD,CAAC,IAAnD,CAAwD,QAAA,CAAC,CAAD,CAAA;AACtD,cAAA,MAAA;IAAA,CAAA;IAAA,GAAA;IAAA;AAAA;UAAA,KAAA,qCAAA;;YACE,MAAO,CAAA,KAAA,CAAP,GAAgB;UADlB;iBAEA,MAAM,CAAC,OAAP,CAAe,mBAAf;QAHsD,CAAxD;IAIE,QAAA,CAAC,EAAD,CAAA;iBACA,MAAM,CAAC,KAAP,CAAa,oBAAb;IAAmC,OAAnC;QADA,CAJF;MAP0B;MAiB5B,MAAM,CAAC,gBAAP,GAA0B,QAAA,CAAC,IAAD,CAAA;AACxB,YAAA;QAAA,IAAI,CAAC,SAAL,GAAiB,CAAC,IAAI,CAAC;QACvB,IAAG,CAAI,IAAI,CAAC,SAAZ;UACE,IAAI,CAAC,SAAL,GAAiB,IAAI,CAAC,GADxB;;QAGA,KAAA,GACE;UAAA,SAAA,EAAY,IAAI,CAAC,SAAjB;UACA,SAAA,EAAY,WADZ;UAEA,KAAA,EAAS,IAAI,CAAC;QAFd;eAIF,KAAK,CAAC,GAAN,CAAU,yBAAV;IAAqC,KAArC,CAA2C,CAAC,IAA5C,CAAiD,QAAA,CAAC,CAAD,CAAA;iBAC/C,OAAO,CAAC,GAAR,CAAY,mBAAZ;QAD+C,CAAjD;IAEE,QAAA,CAAC,EAAD,CAAA;UACA,IAAI,CAAC,SAAL,GAAiB,CAAC,IAAI,CAAC;iBACvB,MAAM,CAAC,KAAP,CAAa,oBAAb;IAAmC,OAAnC;QAFA,CAFF;MAVwB;MAkB1B,MAAM,CAAC,SAAP,GAAmB,QAAA,CAAC,GAAD,CAAA;AAEjB,YAAA;QAAA,aAAA,GAAgB,MAAM,CAAC,IAAP,CAAY;UAC1B,WAAA,EAAa,GAAG,CAAC,KAAJ,GAAY,6BADC;UAE1B,UAAA,EAAY,eAFc;UAG1B,OAAA,EACE;YAAA,OAAA,EAAS,QAAA,CAAA,CAAA;qBACP;YADO;UAAT;QAJwB,CAAZ;eAOhB,aAAa,CAAC,MAAM,CAAC,IAArB,CAA2B,QAAA,CAAC,IAAD,CAAA,EAAA,CAA3B;MATiB,EAhOnB;;MA+OA,MAAM,CAAC,iBAAP,GAA2B,QAAA,CAAC,GAAD,CAAA;eAEzB,KAAK,CAAC,GAAN,CAAU,yBAAV;IAAqC;UAAC,OAAA,EAAS,MAAM,CAAC,IAAI,CAAC;QAAtB,CAArC,CAAqE,CAAC,IAAtE,CAA2E,QAAA,CAAC,CAAD,CAAA;UACzE,MAAM,CAAC,WAAW,CAAC,IAAnB,GAA0B,CAAC,CAAC;UAE5B,MAAM,CAAC,WAAW,CAAC,UAAW,CAAA,CAAA,CAAE,CAAC,OAAjC,GAA2C;iBAC3C,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAApB,CAAA;QAJyE,CAA3E;MAFyB;MAU3B,MAAM,CAAC,oBAAP,GAA8B,QAAA,CAAC,GAAD,CAAA;eAE5B,YAAY,CAAC,QAAb,CAAsB,kCAAtB;IAA0D,sBAAA,GAAuB,MAAM,CAAC,IAAI,CAAC,IAAnC,GAAwC,MAAlG;MAF4B;IA3PqJ,CAA1J;GAF3B;AAFA",
  "sourcesContent": [
    "'use strict'\n\nangular.module(\"myvcFrontApp\")\n\n.controller('CarteraCtrl', ['$scope', 'App', '$state', '$uibModal', '$filter', 'AuthService', 'toastr', '$http', 'uiGridConstants', 'Upload', '$timeout', 'Acentos', 'DownloadServ', ($scope, App, $state, $modal, $filter, AuthService, toastr, $http, uiGridConstants, Upload, $timeout, Acentos, DownloadServ)->\n\n  AuthService.verificar_acceso()\n\n  $scope.dato               = {}\n  $scope.gridOptions        = {}\n  $scope.perfilPath \t\t\t\t= App.images+'perfil/'\n  $scope.views \t\t\t\t\t    = App.views\n  $scope.images \t\t\t\t\t  = App.images\n  $scope.gridScope          = $scope # Para getExternalScopes de ui-Grid\n  $scope.mySelectedRows     = []\n  $scope.valorDeuda         = 0\n  $scope.hombresGrupo       = 0\n  $scope.mujeresGrupo       = 0\n\n\n  $scope.dato.grupo = ''\n\n  $http.get('::grupos').then((r)->\n\n    matr_grupo = 0\n\n    if localStorage.matr_grupo\n      matr_grupo = parseInt(localStorage.matr_grupo)\n\n    $scope.grupos = r.data\n\n    for grupo in $scope.grupos\n      if grupo.id == matr_grupo\n        $scope.dato.grupo = grupo\n\n    $scope.traerAlumnos($scope.dato.grupo)\n\n  )\n\n\n  $scope.ver_indorme_listado_deudores = ()->\n    $scope.viendo_informe_list_deudores = !$scope.viendo_informe_list_deudores\n\n\n  $scope.importarCambios = (file, errFiles)->\n    $scope.f = file;\n    $scope.errFile = errFiles && errFiles[0];\n    if (file)\n      file.upload = Upload.upload({\n          url: App.Server + 'importar/cartera',\n          data: {file: file}\n      });\n\n      file.upload.then( (response)->\n          $timeout( ()->\n              file.result = response.data;\n              $scope.traerAlumnos($scope.dato.grupo)\n          );\n      ,  (response)->\n          if (response.status > 0)\n              $scope.errorMsg = response.status + ': ' + response.data;\n      , (evt)->\n          file.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\n      );\n\n\n\n  $scope.onGrupoSelect = ($item, $model)->\n    if not $item\n      return\n\n    localStorage.setItem('matr_grupo', $item.id)\n    $scope.traerAlumnos($item)\n\n\n  $scope.imprimir = ()->\n    window.print();\n\n\n\n\n  $scope.editar = (row)->\n    #$state.go('panel.cartera.editar', {alumno_id: row.alumno_id})\n    $state.go('panel.persona', { persona_id: row.alumno_id, tipo: 'alumno' })\n\n\n  btGrid1 = '<a uib-tooltip=\"Editar\" tooltip-placement=\"left\" class=\"btn btn-default btn-xs shiny icon-only info\" ng-click=\"grid.appScope.editar(row.entity)\"><i class=\"fa fa-edit \"></i></a>'\n  btPazysalvo = \"==directives/botonesPazysalvo.tpl.html\"\n  btUsuario = \"==directives/botonesResetPassword.tpl.html\"\n  gridFooterCartera = \"==alumnos/gridFooterCartera.tpl.html\"\n\n\n\n  $scope.gridOptions =\n    showGridFooter: true,\n    showColumnFooter: true,\n    gridFooterTemplate: gridFooterCartera,\n    enableSorting: true,\n    enableFiltering: true,\n    exporterSuppressColumns: [ 'edicion', 'foto_nombre' ],\n    exporterCsvColumnSeparator: ';',\n    exporterMenuPdf: false,\n    exporterMenuExcel: false,\n    exporterCsvFilename: \"Alumnos cartera - MyVC.csv\",\n    enableGridMenu: true,\n    enebleGridColumnMenu: false,\n    enableCellEdit: true,\n    enableCellEditOnFocus: true,\n    columnDefs: [\n      { name: 'no', displayName:'No', width: 45, enableCellEdit: false, enableColumnMenu: false, cellTemplate: '<div class=\"ui-grid-cell-contents\">{{grid.renderContainers.body.visibleRowCache.indexOf(row)+1}}</div>'}\n      { name: 'edicion', displayName:'Edición', width: 30, enableSorting: false, enableFiltering: false, cellTemplate: btGrid1, enableCellEdit: false, enableColumnMenu: true}\n      { field: 'foto_nombre', displayName:'Foto', cellTemplate: \"<img width=\\\"35px\\\" ng-src=\\\"{{grid.appScope.perfilPath + grid.getCellValue(row, col)}}\\\">\", width: 40}\n      { field: 'nombres', minWidth: 80,\n      filter: {\n        condition: Acentos.buscarEnGrid\n      }\n      enableHiding: false }\n      { field: 'apellidos', minWidth: 80, filter: { condition: Acentos.buscarEnGrid }}\n      { field: 'sexo', width: 60 }\n      { field: 'nombre_grupo', displayName:'Grupo' }\n      { field: 'username', filter: { condition: Acentos.buscarEnGrid }, displayName: 'Usuario', cellTemplate: btUsuario, minWidth: 150 }\n      # { field: 'fecha_nac', displayName:'Nacimiento', cellFilter: \"date:mediumDate\", type: 'date'}\n      { field: 'deuda', displayName: 'Deuda', cellTemplate: btPazysalvo, minWidth: 150, aggregationType: uiGridConstants.aggregationTypes.sum, footerCellTemplate: '<div class=\"ui-grid-cell-contents\" >Total: {{col.getAggregationValue() | currency:\"$\":0 }}</div>' }\n      { field: 'fecha_pension', displayName: 'Fecha hasta', minWidth: 150, cellFilter: \"date:mediumDate\", type: 'date' }\n    ],\n    multiSelect: true,\n    onRegisterApi: ( gridApi ) ->\n      $scope.gridApi = gridApi\n\n      gridApi.edit.on.afterCellEdit($scope, (rowEntity, colDef, newValue, oldValue)->\n\n        if newValue != oldValue\n          datos = {}\n\n          if colDef.field == 'username'\n            datos.user_id = rowEntity.user_id\n\n          if not rowEntity.alumno_id\n            rowEntity.alumno_id = fila.id\n\n          datos.alumno_id = rowEntity.alumno_id\n          datos.propiedad = colDef.field\n          datos.valor \t\t= newValue\n\n          $http.put('::alumnos/guardar-valor', datos ).then((r)->\n            toastr.success 'Alumno(a) actualizado con éxito'\n          , (r2)->\n            rowEntity[colDef.field] = oldValue\n            toastr.error 'Cambio no guardado', 'Error'\n          )\n        $scope.$apply()\n      )\n\n\n\n  $scope.getSelectedRows = ()->\n    $scope.mySelectedRows = $scope.gridApi.selection.getSelectedRows();\n\n\n\n  $scope.traerAlumnos = (item)->\n\n    $http.put(\"::cartera/alumnos\", {grupo_actual: item}).then((r)->\n      $scope.gridOptions.data = r.data\n\n      $scope.gridOptions.columnDefs[6].visible = false\n      $scope.gridApi.grid.refresh()\n    )\n\n  $scope.deuda_total = ()->\n    sum = 0\n    if $scope.gridOptions.data\n      for alumno in $scope.gridOptions.data\n        sum = sum + alumno.deuda\n    return $filter('currency')(sum, \"$\", 0)\n\n\n  $scope.cantidadDeudores = ()->\n    sum = 0\n    hombres = 0\n    mujeres = 0\n\n    if $scope.gridOptions.data\n      for alumno in $scope.gridOptions.data\n        if !alumno.pazysalvo\n          sum = sum + 1\n        if alumno.sexo == 'M'\n          hombres++\n        else\n          mujeres++\n    $scope.hombresGrupo = hombres\n    $scope.mujeresGrupo = mujeres\n\n    return sum\n\n  $scope.cambiarValorVarios = (valor, campo)->\n\n    datos =\n      alumnos: \t  $scope.getSelectedRows()\n      propiedad: \tcampo\n      valor: \t\t  valor\n\n    $http.put('::alumnos/guardar-valor-varios', datos).then((r)->\n      for alumno in $scope.getSelectedRows()\n        alumno[campo] = valor\n      toastr.success 'Cambios guardados'\n    , (r2)->\n      toastr.error 'Cambio no guardado', 'Error'\n    )\n\n\n\n  $scope.cambiarPazysalvo = (fila)->\n    fila.pazysalvo = !fila.pazysalvo\n    if not fila.alumno_id\n      fila.alumno_id = fila.id\n\n    datos =\n      alumno_id: \tfila.alumno_id\n      propiedad: \t'pazysalvo'\n      valor: \t\tfila.pazysalvo\n\n    $http.put('::alumnos/guardar-valor', datos).then((r)->\n      console.log 'Cambios guardados'\n    , (r2)->\n      fila.pazysalvo = !fila.pazysalvo\n      toastr.error 'Cambio no guardado', 'Error'\n    )\n\n\n  $scope.resetPass = (row)->\n\n    modalInstance = $modal.open({\n      templateUrl: App.views + 'usuarios/resetPass.tpl.html'\n      controller: 'ResetPassCtrl'\n      resolve:\n        usuario: ()->\n          row\n    })\n    modalInstance.result.then( (user)->\n      #console.log 'Resultado del modal: ', user\n    )\n\n\n\n  $scope.traerSoloDeudores = (row)->\n\n    $http.put(\"::cartera/solo-deudores\", {year_id: $scope.USER.year_id }).then((r)->\n      $scope.gridOptions.data = r.data\n\n      $scope.gridOptions.columnDefs[6].visible = true\n      $scope.gridApi.grid.refresh()\n    )\n\n\n  $scope.exportarSoloDeudores = (row)->\n\n    DownloadServ.download('::cartera/exportar-solo-deudores', 'Deudores a exportar '+$scope.USER.year+'.xls')\n\n\n\n\n\n\n\n  return\n])\n\n"
  ]
}