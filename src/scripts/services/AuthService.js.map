{
  "version": 3,
  "file": "AuthService.js",
  "sourceRoot": "",
  "sources": [
    "AuthService.coffee"
  ],
  "names": [],
  "mappings": "AAAA;EAAA,OAAO,CAAC,MAAR,CAAe,cAAf,CAEA,CAAC,OAFD,CAES,aAFT,EAEwB;IAAC,QAAD;IAAW,OAAX;IAAoB,UAApB;IAAgC,QAAhC;IAA0C,YAA1C;IAAwD,aAAxD;IAAuE,IAAvE;IAA6E,SAA7E;IAAwF,QAAxF;IAAkG,QAAA,CAAC,MAAD;IAAS,KAAT;IAAgB,QAAhB;IAA0B,MAA1B;IAAkC,UAAlC;IAA8C,WAA9C;IAA2D,EAA3D;IAA+D,OAA/D;IAAwE,MAAxE,CAAA;AACxH,UAAA;MAAA,WAAA,GAAc,CAAA;MAEd,WAAW,CAAC,SAAZ,GAAwB,QAAA,CAAA,CAAA;AACtB,YAAA;QAAA,CAAA,GAAI,EAAE,CAAC,KAAH,CAAA;QAEJ,IAAG,MAAM,CAAC,IAAP,CAAA,CAAa,CAAC,OAAjB;UACE,CAAC,CAAC,OAAF,CAAU,MAAM,CAAC,IAAP,CAAA,CAAV,EADF;SAAA,MAAA;UAGE,IAAG,QAAQ,CAAC,GAAT,CAAa,QAAb,CAAH;YACE,IAAG,QAAQ,CAAC,GAAT,CAAa,QAAb,CAAA,KAA0B,MAA1B,IAAwC,QAAQ,CAAC,GAAT,CAAa,QAAb,CAAA,KAA0B,WAAlE,IAAmF,QAAQ,CAAC,GAAT,CAAa,QAAb,CAAA,KAA0B,iBAAhH;cACE,WAAW,CAAC,gBAAZ,CAAA,CAA8B,CAAC,IAA/B,CAAoC,QAAA,CAAC,OAAD,CAAA;gBAClC,MAAM,CAAC,OAAP,CAAe,OAAf;uBACA,CAAC,CAAC,OAAF,CAAU,OAAV;cAFkC,CAApC;IAGE,QAAA,CAAC,EAAD,CAAA;gBACA,OAAO,CAAC,GAAR,CAAY,yBAAZ;uBACA,CAAC,CAAC,MAAF,CAAS,EAAT;cAFA,CAHF,EADF;aAAA,MAAA;cASE,WAAW,CAAC,WAAZ,CAAA;cACA,CAAC,CAAC,MAAF,CAAS,yBAAT,EAVF;aADF;WAAA,MAAA;YAaE,OAAO,CAAC,GAAR,CAAY,cAAZ;YACA,CAAC,CAAC,OAAF,CAAU,eAAV,EADA;;YAGA,UAAU,CAAC,UAAX,CAAsB,WAAW,CAAC,gBAAlC,EAhBF;WAHF;;AAoBA,eAAO,CAAC,CAAC;MAvBa;MA4BxB,WAAW,CAAC,gBAAZ,GAA+B,QAAA,CAAA,CAAA;AAC7B,YAAA,gBAAA;IAAA,gBAAA;IAAA,kBAAA;IAAA,YAAA;IAAA;QAAA,IAAG,CAAC,MAAM,CAAC,IAAP,CAAA,CAAa,CAAC,OAAlB;UACE,MAAM,CAAC,EAAP,CAAU,OAAV,EADF;;QAGA,IAAA,GAAO,MAAM,CAAC;QACd,gBAAA,GAAmB;QACnB,gBAAA,GAAmB;QAEnB,IAAG,IAAI,CAAC,IAAI,CAAC,kBAAb;UACE,kBAAA,GAAqB,IAAI,CAAC,IAAI,CAAC;UAE/B,IAAI,CAAC,WAAW,CAAC,YAAZ,CAAyB,kBAAzB,CAAL;YACE,gBAAA,GAAmB,KADrB;WAHF;;QAOA,IAAG,IAAI,CAAC,IAAI,CAAC,YAAb;UACE,YAAA,GAAe,IAAI,CAAC,IAAI,CAAC;UAEzB,IAAI,CAAC,WAAW,CAAC,YAAZ,CAAyB,KAAzB;IAAgC,YAAhC,CAAL;YACE,gBAAA,GAAmB,KADrB;WAHF;;QAMA,IAAG,gBAAA,IAAqB,gBAAxB;UACE,UAAU,CAAC,SAAX,GAAuB,IAAI,CAAC;UAC5B,IAAI,WAAW,CAAC,eAAZ,CAAA,CAAJ;;YAEE,UAAU,CAAC,UAAX,CAAsB,WAAW,CAAC,aAAlC,EAFF;WAAA,MAAA;YAIE,MAAM,CAAC,YAAP,CAAoB,OAApB,EAJF;WAFF;;QAQA,IAAG,CAAC,IAAI,CAAC,IAAI,CAAC,YAAX,IAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,kBAA1C;AACE,iBAAO,KADT;;MA7B6B;MAmC/B,WAAW,CAAC,iBAAZ,GAAgC,QAAA,CAAC,WAAD,CAAA;AAE9B,YAAA;QAAA,CAAA,GAAI,EAAE,CAAC,KAAH,CAAA;QAEJ,WAAW,CAAC,WAAZ,CAAA;QAEA,KAAK,CAAC,IAAN,CAAW,qBAAX;IAAkC,WAAlC,CAA8C,CAAC,IAA/C,CAAoD,QAAA,CAAC,CAAD,CAAA;AAClD,cAAA;UAAA,SAAA,GAAY,CAAC,CAAC;UAEd,IAAG,SAAS,CAAC,QAAb;YACE,QAAQ,CAAC,GAAT,CAAa,QAAb;IAAuB,SAAS,CAAC,QAAjC;YAEA,IAAG,SAAS,CAAC,WAAV,GAAwB,CAA3B;cACE,YAAY,CAAC,WAAb,GAA2B,SAAS,CAAC,YADvC;;YAGA,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAO,CAAA,eAAA,CAA9B,GAAiD,SAAA,GAAY,QAAQ,CAAC,GAAT,CAAa,QAAb;YAC7D,YAAY,CAAC,SAAb,GAAyB;mBAEzB,CAAC,CAAC,OAAF,CAAU,SAAS,CAAC,QAApB,EATF;WAAA,MAAA;;YAYE,UAAU,CAAC,UAAX,CAAsB,WAAW,CAAC,WAAlC;mBACA,CAAC,CAAC,MAAF,CAAS,gBAAT,EAbF;;QAHkD,CAApD;IAoBE,QAAA,CAAC,EAAD,CAAA;UACA,UAAU,CAAC,UAAX,CAAsB,WAAW,CAAC,WAAlC;UAEA,OAAO,CAAC,GAAR,CAAY,EAAZ;UAEA,IAAG,EAAH;YACE,IAAG,EAAE,CAAC,MAAN;cACE,IAAG,EAAE,CAAC,MAAH,KAAa,GAAhB;gBACE,IAAG,EAAE,CAAC,IAAI,CAAC,OAAR,KAAmB,oBAAtB;kBACE,MAAM,CAAC,KAAP,CAAa,oBAAb;IAAmC,WAAnC;IAAgD;oBAAC,OAAA,EAAS;kBAAV,CAAhD,EADF;iBAAA,MAAA;kBAGE,MAAM,CAAC,KAAP,CAAa,iBAAb;IAAgC,EAAhC;IAAoC;oBAAC,OAAA,EAAS;kBAAV,CAApC,EAHF;iBADF;eAAA,MAKK,IAAG,EAAE,CAAC,MAAH,KAAa,CAAC,CAAjB;gBACH,MAAM,CAAC,KAAP,CAAa,8CAAb;IAA6D,EAA7D;IAAiE;kBAAC,OAAA,EAAS;gBAAV,CAAjE,EADG;eAAA,MAEA,IAAG,EAAE,CAAC,MAAH,KAAa,GAAhB;gBACH,MAAM,CAAC,KAAP,CAAa,mDAAb;IAAkE,EAAlE;IAAsE;kBAAC,OAAA,EAAS;gBAAV,CAAtE,EADG;eARP;aAAA,MAWK,IAAG,EAAE,CAAC,IAAN;cACH,IAAG,EAAE,CAAC,IAAH,KAAW,eAAd;gBACE,MAAM,CAAC,OAAP,CAAe,qBAAf,EADF;;cAGA,IAAG,EAAE,CAAC,IAAI,CAAC,KAAX;gBACE,IAAG,EAAE,CAAC,IAAI,CAAC,KAAR,KAAiB,gBAAjB,IAAqC,EAAE,CAAC,KAAH,KAAY,eAApD;kBACE,MAAM,CAAC,OAAP,CAAe,uBAAf;kBACA,IAAG,MAAM,CAAC,OAAO,CAAC,IAAf,KAAuB,OAA1B;oBACE,MAAM,CAAC,EAAP,CAAU,OAAV,EADF;mBAFF;iBAAA,MAAA;kBAME,UAAU,CAAC,UAAX,CAAsB,WAAW,CAAC,WAAlC,EANF;iBADF;eAJG;aAAA,MAAA;cAaH,MAAM,CAAC,KAAP,CAAa,8CAAb,EAbG;aAZP;WAAA,MAAA;YA2BE,MAAM,CAAC,KAAP,CAAa,8CAAb,EA3BF;;iBA4BA,CAAC,CAAC,MAAF,CAAS,gBAAT;QAjCA,CApBF;AAuDA,eAAO,CAAC,CAAC;MA7DqB;MAgEhC,WAAW,CAAC,gBAAZ,GAA+B,QAAA,CAAA,CAAA;AAE7B,YAAA,CAAA;IAAA;QAAA,CAAA,GAAI,EAAE,CAAC,KAAH,CAAA;QAEJ,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAO,CAAA,eAAA,CAA9B,GAAiD,SAAA,GAAY,QAAQ,CAAC,GAAT,CAAa,QAAb;QAE7D,KAAA,GAAQ,KAAK,CAAC,IAAN,CAAW,SAAX,CAAqB,CAAC,IAAtB,CAA2B,QAAA,CAAC,CAAD,CAAA;AACjC,cAAA;UAAA,OAAA,GAAU,CAAC,CAAC;UACZ,UAAU,CAAC,UAAX,CAAsB,WAAW,CAAC,YAAlC;iBACA,CAAC,CAAC,OAAF,CAAU,OAAV;QAHiC,CAA3B;IAKN,QAAA,CAAC,EAAD,CAAA;UAEA,IAAG,EAAE,CAAC,IAAN;YACE,IAAG,EAAE,CAAC,IAAI,CAAC,OAAR,KAAmB,eAAtB;cACE,MAAM,CAAC,OAAP,CAAe,qBAAf,EADF;aADF;;iBAIA,CAAC,CAAC,MAAF,CAAS,2BAAT;QANA,CALM,EAJR;;AAkBA,eAAO,CAAC,CAAC;MApBoB;MAuB/B,WAAW,CAAC,MAAZ,GAAqB,QAAA,CAAA,CAAA;AAEnB,YAAA;QAAA,KAAA,GAAQ,KAAK,CAAC,GAAN,CAAU,gBAAV;IAA4B;UAAC,OAAA,EAAS,MAAM,CAAC,IAAP,CAAA,CAAa,CAAC;QAAxB,CAA5B,CAA6D,CAAC,IAA9D,CAAmE,QAAA,CAAC,CAAD,CAAA;iBACzE,OAAO,CAAC,GAAR,CAAY,gBAAZ;QADyE,CAAnE;IAEN,QAAA,CAAC,EAAD,CAAA;iBACA,OAAO,CAAC,GAAR,CAAY,qCAAZ;QADA,CAFM;QAKR,UAAU,CAAC,SAAX,GAAuB;QACvB,UAAU,CAAC,cAAX,GAA4B;QAC5B,MAAM,CAAC,UAAP,CAAA;QACA,WAAW,CAAC,WAAZ,CAAA;QACA,OAAO,YAAY,CAAC;eACpB,MAAM,CAAC,YAAP,CAAoB,OAApB;MAZmB;MAcrB,WAAW,CAAC,WAAZ,GAA0B,QAAA,CAAA,CAAA;QACxB,QAAQ,CAAC,MAAT,CAAgB,QAAhB;eACA,OAAO,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAO,CAAA,eAAA;MAFb;MAI1B,WAAW,CAAC,eAAZ,GAA8B,QAAA,CAAA,CAAA;AAC5B,eAAO,CAAC,CAAC,MAAM,CAAC,IAAP,CAAA,CAAa,CAAC;MADK;MAG9B,WAAW,CAAC,YAAZ,GAA2B,QAAA,CAAC,iBAAD;IAAoB,WAApB,CAAA;AACzB,YAAA,MAAA;IAAA;QAAA,IAAA,GAAO,MAAM,CAAC,IAAP,CAAA;QACP,IAAG,IAAI,CAAC,YAAR;AACE,iBAAO,KADT;;QAGA,MAAA,GAAS;QAET,IAAG,iBAAH;UACE,IAAI,CAAC,OAAO,CAAC,OAAR,CAAgB,iBAAhB,CAAL;YACE,iBAAA,GAAoB,CAAC,iBAAD,EADtB;;UAGA,IAAI,CAAC,OAAO,CAAC,OAAR,CAAgB,IAAI,CAAC,KAArB,CAAL;YACE,IAAG,iBAAiB,CAAC,MAAlB,GAA2B,CAA9B;AACE,qBAAO,MADT;aAAA,MAAA;AAGE,qBAAO,KAHT;aADF;;UAOA,OAAO,CAAC,OAAR,CAAgB,iBAAhB;IAAmC,QAAA,CAAC,IAAD,CAAA;YACjC,IAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAX,CAAmB,IAAnB,CAAD,CAAA,KAA8B,CAAC,CAAlC;qBACE,MAAM,CAAC,IAAP,CAAY,IAAZ,EADF;;UADiC,CAAnC,EAXF;;QAgBA,IAAG,WAAH;UACE,IAAI,CAAC,OAAO,CAAC,OAAR,CAAgB,WAAhB,CAAL;YACE,WAAA,GAAc,CAAC,WAAD,EADhB;;UAGA,IAAI,CAAC,OAAO,CAAC,OAAR,CAAgB,IAAI,CAAC,KAArB,CAAL;YACE,IAAG,WAAW,CAAC,MAAZ,GAAqB,CAAxB;AACE,qBAAO,MADT;aAAA,MAAA;AAGE,qBAAO,KAHT;aADF;;UAOA,OAAO,CAAC,OAAR,CAAgB,WAAhB;IAA6B,QAAA,CAAC,IAAD,CAAA;AAC3B,gBAAA,CAAA;IAAA,GAAA;IAAA,GAAA;IAAA,OAAA;IAAA;AAAA;AAAA;YAAA,KAAA,qCAAA;;cACE,IAAG,GAAG,CAAC,IAAI,CAAC,iBAAT,CAAA,CAAA,KAAgC,IAAI,CAAC,iBAAL,CAAA,CAAnC;6BACE,MAAM,CAAC,IAAP,CAAY,IAAZ,GADF;eAAA,MAAA;qCAAA;;YADF,CAAA;;UAD2B,CAA7B,EAXF;;AAiBA,eAAQ,WAAW,CAAC,eAAZ,CAAA,CAAA,IAAkC,CAAC,MAAM,CAAC,MAAP,GAAgB,CAAjB;MAxCjB;MA4C3B,WAAW,CAAC,aAAZ,GAA4B,QAAA,CAAC,QAAD;IAAW,SAAX,CAAA;AAC1B,YAAA;QAAA,IAAI,CAAC,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAL;UACE,IAAG,QAAH;YACE,QAAA,GAAW,CAAC,QAAD,EADb;WAAA,MAAA;AAGE,mBAAO,MAHT;WADF;;QAMA,UAAA,GAAa;QACb,OAAO,CAAC,OAAR,CAAgB,QAAhB;IAA0B,QAAA,CAAC,IAAD,CAAA;AACxB,cAAA;UAAA,cAAA,GAAiB;UACjB,cAAA,GAAiB,OAAA,CAAQ,QAAR,CAAA,CAAkB,MAAM,CAAC,IAAP,CAAA,CAAa,CAAC,KAAhC;IAAuC;YAAC,IAAA,EAAM;UAAP,CAAvC;UAEjB,IAAG,cAAH;YACE,IAAG,cAAc,CAAC,MAAf,GAAwB,CAA3B;qBACE,UAAU,CAAC,IAAX,CAAgB,IAAhB,EADF;aADF;;QAJwB,CAA1B;AASA,eAAQ,UAAU,CAAC,MAAX,GAAoB;MAjBF;AAqB5B,aAAO;IA/OiH,CAAlG;GAFxB;AAAA",
  "sourcesContent": [
    "angular.module('myvcFrontApp')\n\n.factory('AuthService', ['$state', '$http', '$cookies', 'Perfil', '$rootScope', 'AUTH_EVENTS', '$q', '$filter', 'toastr', ($state, $http, $cookies, Perfil, $rootScope, AUTH_EVENTS, $q, $filter, toastr)->\n  authService = {}\n\n  authService.verificar = ()->\n    d = $q.defer();\n\n    if Perfil.User().user_id\n      d.resolve Perfil.User()\n    else\n      if $cookies.get('xtoken')\n        if $cookies.get('xtoken') != undefined and $cookies.get('xtoken') != 'undefined'  and $cookies.get('xtoken') != '[object Object]'\n          authService.login_from_token().then((usuario)->\n            Perfil.setUser usuario\n            d.resolve usuario\n          , (r2)->\n            console.log 'No se logueÃ³ from token'\n            d.reject r2\n          )\n        else\n          authService.borrarToken()\n          d.reject 'Token mal estructurado.'\n      else\n        console.log 'No hay token'\n        d.resolve 'No hay token.'\n        #$state.go 'login'\n        $rootScope.$broadcast(AUTH_EVENTS.notAuthenticated)\n    return d.promise\n\n\n\n\n  authService.verificar_acceso = ()->\n    if !Perfil.User().user_id\n      $state.go 'login'\n\n    next = $state.current\n    autorizado_perms = false\n    autorizado_roles = false\n\n    if next.data.needed_permissions\n      needed_permissions = next.data.needed_permissions\n\n      if (!authService.isAuthorized(needed_permissions))\n        autorizado_perms = true\n\n\n    if next.data.needed_roles\n      needed_roles = next.data.needed_roles\n\n      if (!authService.isAuthorized(false, needed_roles))\n        autorizado_roles = true\n\n    if autorizado_perms and autorizado_roles\n      $rootScope.lastState = next.name\n      if (authService.isAuthenticated())\n        # user is not allowed\n        $rootScope.$broadcast(AUTH_EVENTS.notAuthorized)\n      else\n        $state.transitionTo 'login'\n\n    if !next.data.needed_roles and !next.data.needed_permissions\n      return true\n\n\n\n\n  authService.login_credentials = (credentials)->\n\n    d = $q.defer();\n\n    authService.borrarToken()\n\n    $http.post('::login/credentials', credentials).then((r)->\n      respuesta = r.data\n\n      if respuesta.el_token\n        $cookies.put('xtoken', respuesta.el_token)\n\n        if respuesta.cambia_anio > 0\n          localStorage.cambia_anio = respuesta.cambia_anio\n\n        $http.defaults.headers.common['Authorization'] = 'Bearer ' + $cookies.get('xtoken')\n        localStorage.logueando = 'token_verificado'\n\n        d.resolve respuesta.el_token\n      else\n        #console.log 'No se trajo un token en el login.', user\n        $rootScope.$broadcast AUTH_EVENTS.loginFailed\n        d.reject 'Error en login'\n\n\n\n    , (r2)->\n      $rootScope.$broadcast AUTH_EVENTS.loginFailed\n\n      console.log(r2)\n\n      if r2\n        if r2.status\n          if r2.status == 400\n            if r2.data.message == 'Usuario invalidado'\n              toastr.error 'Te han desactivado', 'NO ACTIVO', {timeOut: 8000}\n            else\n              toastr.error 'Datos invÃ¡lidos', '', {timeOut: 8000}\n          else if r2.status == -1\n            toastr.error 'No parece haber comunicaciÃ³n con el servidor', '', {timeOut: 8000}\n          else if r2.status == 500\n            toastr.error 'No parece haber comunicaciÃ³n con la Base de datos', '', {timeOut: 8000}\n\n        else if r2.data\n          if r2.data == 'user_inactivo'\n            toastr.warning 'Usuario desactivado'\n\n          if r2.data.error\n            if r2.data.error == 'Token expirado' or r2.error == 'token_expired'\n              toastr.warning 'La sesiÃ³n ha expirado'\n              if $state.current.name != 'login'\n                $state.go 'login'\n\n            else\n              $rootScope.$broadcast AUTH_EVENTS.loginFailed\n        else\n          toastr.error 'No parece haber comunicaciÃ³n con el servidor'\n      else\n        toastr.error 'No parece haber comunicaciÃ³n con el servidor'\n      d.reject 'Error en login'\n    )\n    return d.promise\n\n\n  authService.login_from_token = ()->\n\n    d = $q.defer();\n\n    $http.defaults.headers.common['Authorization'] = 'Bearer ' + $cookies.get('xtoken')\n\n    login = $http.post('::login').then((r)->\n      usuario = r.data\n      $rootScope.$broadcast(AUTH_EVENTS.loginSuccess);\n      d.resolve usuario\n\n    , (r2)->\n\n      if r2.data\n        if r2.data.message == \"user_inactivo\"\n          toastr.warning 'Usuario desactivado'\n\n      d.reject 'Error en login con token.'\n      #$rootScope.$broadcast AUTH_EVENTS.loginFailed\n    )\n    return d.promise\n\n\n  authService.logout = ()->\n\n    login = $http.put('::login/logout', {user_id: Perfil.User().user_id}).then((r)->\n      console.log('SesiÃ³n cerrada');\n    , (r2)->\n      console.log 'No se registrÃ³ el cierre de sesiÃ³n.'\n    )\n    $rootScope.lastState = null\n    $rootScope.lastStateParam = null\n    Perfil.deleteUser()\n    authService.borrarToken()\n    delete localStorage.logueando\n    $state.transitionTo 'login'\n\n  authService.borrarToken = ()->\n    $cookies.remove('xtoken')\n    delete $http.defaults.headers.common['Authorization']\n\n  authService.isAuthenticated = ()->\n    return !!Perfil.User().user_id;\n\n  authService.isAuthorized = (neededPermissions, neededRoles)->\n    user = Perfil.User()\n    if user.is_superuser\n      return true\n\n    newArr = []\n\n    if neededPermissions\n      if (!angular.isArray(neededPermissions))\n        neededPermissions = [neededPermissions]\n\n      if (!angular.isArray(user.perms))\n        if neededPermissions.length > 0\n          return false; # Hay permisos requeridos pero el usuario no tiene ninguno\n        else\n          return true; # El usuarios no tiene permisos pero no se requiere ninguno\n\n\n      angular.forEach(neededPermissions, (elem)->\n        if (user.perms.indexOf(elem)) != -1\n          newArr.push elem\n      )\n\n    if neededRoles\n      if (!angular.isArray(neededRoles))\n        neededRoles = [neededRoles]\n\n      if (!angular.isArray(user.roles))\n        if neededRoles.length > 0\n          return false; # Hay permisos requeridos pero el usuario no tiene ninguno\n        else\n          return true; # El usuarios no tiene permisos pero no se requiere ninguno\n\n\n      angular.forEach(neededRoles, (elem)->\n        for rol in user.roles\n          if rol.name.toLocaleLowerCase() == elem.toLocaleLowerCase()\n            newArr.push elem\n      )\n\n    return (authService.isAuthenticated() and (newArr.length > 0))\n\n\n\n  authService.hasRoleOrPerm = (ReqRoles, RedPermis)->\n    if (!angular.isArray(ReqRoles))\n      if ReqRoles\n        ReqRoles = [ReqRoles]\n      else\n        return false;\n\n    rolesFound = []\n    angular.forEach(ReqRoles, (elem)->\n      rolesFoundTemp = []\n      rolesFoundTemp = $filter('filter')(Perfil.User().roles, {name: elem})\n\n      if rolesFoundTemp\n        if rolesFoundTemp.length > 0\n          rolesFound.push elem\n    )\n\n    return (rolesFound.length > 0)\n\n\n\n  return authService;\n])\n"
  ]
}